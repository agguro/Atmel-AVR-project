
AVRA   Ver. 1.3.0 5161AS-single-digit-led.asm Fri Dec 10 08:43:27 2021


         ;name:          5161AS-single-digit-led.asm
         ;assemble:      avra 5161AS-single-digit-led.asm
         ;flash:         avrdude -c arduino -p m328p -P /dev/ttyACM0 -b 115200 -U flash:w:5161AS-single-digit-led.hex
         ;description:   small demonstration on how to deal with the 5161AS single digit led.
         ;               the program lits one led at a time with a small pause between the next state.
         ;               the only registers used is r16 and the carry flag.
         ;               assumed is that the led segments are connected to PORTD with the next configuration:
         ;               led - gate - value in r16
         ;                A     0       00000001
         ;                B     1       00000010
         ;                C     2       00000100
         ;                D     3       00001000
         ;                E     4       00010000
         ;                F     5       00100000
         ;                G     6       01000000
         ;               DP     7       10000000
         ;remark:        not using the delay functions gives the impression that all leds lits as one.
         ;dec 9, 2021 - agguro - no-license license
         
          .device ATmega328P
          .cseg
          .org 0x00
         
          .equ    PORTD   = 0x0b
          .equ    DDRD    = 0x0a
         
          start:
C:000000 ef0f          ldi     r16,0b11111111  ;r16 = 0xFF all ports as output
C:000001 b90a          out     DDRD,r16        ;r16 to DDRD (0x0a) controls PORTD's in/out state.
C:000002 2700          eor     r16, r16        ;initialize gate0 from PORTD to HIGH
C:000003 9408          sec                     ;set carry flag
          loop:
C:000004 1f00          rol     r16             ;rotate r16 through carry flag
C:000005 b90b          out     PORTD,r16       ;write r16 to PORTD
C:000006 940e 0009     call    delay           ;wait a while
C:000008 cffb          rjmp    loop            ;continu rotating and writing
             
         ;Assembly code auto-generated by utility from Bret Mulvey
         ;Delay 7 999 996 cycles - 499ms 999us 750 ns at 16.0 MHz
         ;http://darcy.rsgc.on.ca/ACES/TEI4M/AVRdelay.html
          delay:
C:000009 e229          ldi     r18, 41
C:00000a e936          ldi     r19, 150
C:00000b e74e          ldi     r20, 126
          l1: 
C:00000c 954a          dec     r20
C:00000d f7f1          brne    l1
C:00000e 953a          dec     r19
C:00000f f7e1          brne    l1
C:000010 952a          dec     r18
C:000011 f7d1          brne    l1
C:000012 9508          ret


Segment usage:
   Code      :        19 words (38 bytes)
   Data      :         0 bytes
   EEPROM    :         0 bytes

Assembly completed with no errors.
