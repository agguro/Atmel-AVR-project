
AVRA   Ver. 1.3.0 at328-0.asm Sat Dec 18 07:03:49 2021


         ;name:        at328-0.asm
         ;description: Program loops turning PC0 on and off as fast as possible.
         ;source:      https://ece-classes.usc.edu/ee459/library/plaintext.php?file=samples/AVR/at328-0s.S
         ;             https://ece-classes.usc.edu/ee459/library/plaintext.php?file=samples/AVR/at328-0.c
         ;             https://ece-classes.usc.edu/ee459/library/samples/AVR/Makefile-ATmega328P
         ;remark:      This a cracked version of at328-0s.S
         ;             The assembly source can be generated with Makefile disasm > at328-o.disasm
         ;             from the source directory.
         ;             Because the program is a reversed one, and avr-as and avr-gcc has a kind of default
         ;             layout, I've tweaked it a bit.
          .device ATmega328P
         
          .equ    DDRC = 0x07
          .equ    PORTC = 0x08
          .equ    SREG = 0x3f
          .equ    RAMEND = 0x08ff
          .equ    SPL = 0x3d
          .equ    SPH = 0x3e
         
          .cseg
          .org 0x00
         
          start_int_vectors:
C:000000 940c 0034     jmp     start                   ; jmp to program start
C:000002 940c 003e     jmp     undefined_int_routine   ; External Interrupt Request 0           INT0_vect
C:000004 940c 003e     jmp     undefined_int_routine   ; External Interrupt Request 1           INT1_vect
C:000006 940c 003e     jmp     undefined_int_routine   ; Pin Change Interrupt Request 0         PCINT0_vect
C:000008 940c 003e     jmp     undefined_int_routine   ; Pin Change Interrupt Request 1         PCINT1_vect
C:00000a 940c 003e     jmp     undefined_int_routine   ; Pin Change Interrupt Request 2         PCINT2_vect
C:00000c 940c 003e     jmp     undefined_int_routine   ; Watchdog Time-out Interrupt            WDT_vect
C:00000e 940c 003e     jmp     undefined_int_routine   ; Timer/Counter2 Compare Match A         TIMER2_COMPA_vect
C:000010 940c 003e     jmp     undefined_int_routine   ; Timer/Counter2 Compare Match B         TIMER2_COMPB_vect
C:000012 940c 003e     jmp     undefined_int_routine   ; Timer/Counter2 Overflow                TIMER2_OVF_vect
C:000014 940c 003e     jmp     undefined_int_routine   ; Timer/Counter1 Capture Event           TIMER1_CAPT_vect
C:000016 940c 003e     jmp     undefined_int_routine   ; Timer/Counter1 Compare Match A         TIMER1_COMPA_vect
C:000018 940c 003e     jmp     undefined_int_routine   ; Timer/Counter1 Compare Match B         TIMER1_COMPB_vect
C:00001a 940c 003e     jmp     undefined_int_routine   ; Timer/Counter1 Overflow                TIMER1_OVF_vect
C:00001c 940c 003e     jmp     undefined_int_routine   ; Timer/Counter0 Compare Match A         TIMER0_COMPA_vect
C:00001e 940c 003e     jmp     undefined_int_routine   ; Timer/Counter0 Compare Match B         TIMER0_COMPB_vect
C:000020 940c 003e     jmp     undefined_int_routine   ; Timer/Counter0 Overflow                TIMER0_OVF_vect
C:000022 940c 003e     jmp     undefined_int_routine   ; SPI Serial Transfer Complete           SPI_STC_vect
C:000024 940c 003e     jmp     undefined_int_routine   ; USART Rx Complete                      USART_RX_vect
C:000026 940c 003e     jmp     undefined_int_routine   ; USART Data Register Empty              USART_UDRE_vect
C:000028 940c 003e     jmp     undefined_int_routine   ; USART Tx Complete                      USART_TX_vect
C:00002a 940c 003e     jmp     undefined_int_routine   ; ADC Conversion Complete                ADC_vect
C:00002c 940c 003e     jmp     undefined_int_routine   ; EEPROM Ready                           EE_READY_vect
C:00002e 940c 003e     jmp     undefined_int_routine   ; Analog Comparator                      ANALOG_COMP_vect
C:000030 940c 003e     jmp     undefined_int_routine   ; Two-wire Serial Interface              TWI_vect
C:000032 940c 003e     jmp     undefined_int_routine   ; Store Program Memory Read              SPM_READY_vect
           
          start:
             ; setup stack to end of SRAM
C:000034 2411          eor     r1, r1
C:000035 be1f          out     SREG, r1
C:000036 efcf          ldi     r28, LOW(RAMEND)
C:000037 e0d8          ldi     r29, HIGH(RAMEND)
C:000038 bfde          out     SPH, r29
C:000039 bfcd          out     SPL, r28
C:00003a 940e 0040     call    main                    ;call program
C:00003c 940c 0044     jmp     exit
         
          undefined_int_routine:
C:00003e 940c 0000     jmp     start_int_vectors       ;to begin of interrupt vector table
         
          main:
C:000040 9a38          sbi     DDRC, 0                 ;Set PC0 for output
         
          loop:
C:000041 9a40          sbi     PORTC, 0                ;PC0=1      
C:000042 9840          cbi     PORTC, 0                ;PC0=0
C:000043 cffd          rjmp    loop
         
          exit:
C:000044 94f8          cli             ;disable interrupts
             
          stop:
C:000045 cfff          rjmp    stop    ;stop program


Segment usage:
   Code      :        70 words (140 bytes)
   Data      :         0 bytes
   EEPROM    :         0 bytes

Assembly completed with no errors.
